import { Patient, Gender, BloodType, MaritalStatus, RegistrationType, InsuranceType, VerificationStatus } from '@prisma/client';
import { TenantInfoDto } from '../../tenants/dto/tenant-info.dto';
type PatientWithRelations = Patient & {
    tenant?: {
        id: string;
        name: string;
        slug: string;
    };
    emergencyContacts?: Array<{
        id: string;
        name: string;
        relationship: string | null;
        phone: string;
        email: string | null;
        address: string | null;
        isPrimary: boolean;
        notes: string | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    documents?: Array<{
        id: string;
        documentType: string;
        fileName: string;
        fileType: string;
        fileSize: number;
        filePath: string;
        uploadedBy: string;
        createdAt: Date;
        updatedAt: Date;
    }>;
    createdByUser?: {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
    } | null;
    updatedByUser?: {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
    } | null;
};
export declare class PatientResponseDto {
    constructor(patient: PatientWithRelations);
    id: string;
    medicalRecordNumber: string;
    registrationNumber: string | null;
    registrationType: RegistrationType;
    referralSource?: string | null;
    referringDoctor?: string | null;
    referringContact?: string | null;
    externalId: string | null;
    title: string | null;
    firstName: string;
    middleName: string | null;
    lastName: string;
    fullName: string;
    photoUrl: string | null;
    dob: Date | null;
    age: number | null;
    gender: Gender | null;
    bloodType: BloodType | null;
    bloodGroup: string | null;
    rhFactor: string | null;
    maritalStatus: MaritalStatus | null;
    occupation: string | null;
    phone: string | null;
    alternatePhone: string | null;
    email: string | null;
    isEmailVerified: boolean;
    isPhoneVerified: boolean;
    addressLine1: string | null;
    addressLine2: string | null;
    city: string | null;
    state: string | null;
    postalCode: string | null;
    country: string | null;
    aadhaarNumber: string | null;
    panNumber: string | null;
    passportNumber: string | null;
    drivingLicense: string | null;
    allergies: any | null;
    chronicConditions: string[];
    currentMedications: string[];
    knownAllergies: string[];
    insuranceProvider: string | null;
    insuranceId: string | null;
    insuranceGroup: string | null;
    insurancePolicyNumber: string | null;
    insuranceType: InsuranceType | null;
    tpaId: string | null;
    insuranceValidUntil: Date | null;
    religion: string | null;
    nationality: string | null;
    language: string;
    verificationStatus: VerificationStatus;
    verificationNotes: string | null;
    verifiedAt: Date | null;
    verifiedBy: string | null;
    isActive: boolean;
    isVerified: boolean;
    isDeceased: boolean;
    dateOfDeath: Date | null;
    causeOfDeath: string | null;
    notes: string | null;
    deletedAt: Date | null;
    createdAt: Date;
    updatedAt: Date;
    createdByUser?: {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
    } | null;
    updatedByUser?: {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
    } | null;
    tenantId: string;
    tenant?: TenantInfoDto;
    documents?: Array<{
        id: string;
        documentType: string;
        fileName: string;
        fileType: string;
        fileSize: number;
        fileUrl: string;
        uploadedAt: Date;
    }>;
    emergencyContacts: Array<{
        id: string;
        name: string;
        relationship: string | null;
        phone: string;
        email: string | null;
        address: string | null;
        isPrimary: boolean;
        notes: string | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    specialNeeds: string[];
    isVerified: boolean;
    verificationMethod: string | null;
    lastVerifiedAt: Date | null;
    preferences: Record<string, any> | null;
    communicationPreferences: Record<string, boolean> | null;
    privacyPreferences: Record<string, boolean> | null;
    createdById: string | null;
    updatedById: string | null;
}
export {};
