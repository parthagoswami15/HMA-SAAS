import { Gender, BloodType, MaritalStatus, RegistrationType, InsuranceType } from '../../common/enums/patient.enums';
export interface IEmergencyContact {
    id?: string;
    name: string;
    relationship?: string;
    phone: string;
    email?: string;
    address?: string;
    isPrimary?: boolean;
    patientId?: string;
    createdAt?: Date;
    updatedAt?: Date;
}
export declare class EmergencyContactDto implements IEmergencyContact {
    id?: string;
    name: string;
    relationship?: string;
    phone: string;
    email?: string;
    address?: string;
    isPrimary?: boolean;
    patientId?: string;
    createdAt?: Date;
    updatedAt?: Date;
}
export interface IPatient {
    id?: string;
    tenantId: string;
    registrationNumber: string;
    title?: string;
    firstName: string;
    middleName?: string;
    lastName: string;
    dateOfBirth: Date;
    gender: Gender;
    bloodType?: BloodType;
    maritalStatus?: MaritalStatus;
    registrationType: RegistrationType;
    insuranceType?: InsuranceType;
    insuranceNumber?: string;
    phoneNumber: string;
    email?: string;
    address?: string;
    city?: string;
    state?: string;
    country?: string;
    postalCode?: string;
    emergencyContacts?: IEmergencyContact[];
    medicalHistory?: string;
    allergies?: string[];
    currentMedications?: string[];
    isActive: boolean;
    isVerified: boolean;
    verifiedAt?: Date;
    verifiedBy?: string;
    lastVisitAt?: Date;
    createdAt: Date;
    updatedAt: Date;
    deletedAt?: Date;
    createdBy?: string;
    updatedBy?: string;
}
export declare class PatientRegistrationDto implements Omit<IPatient, 'id' | 'createdAt' | 'updatedAt' | 'deletedAt' | 'lastVisitAt' | 'isVerified' | 'verifiedAt' | 'verifiedBy'> {
    title?: string;
    tenantId: string;
    registrationNumber: string;
    firstName: string;
    middleName?: string;
    lastName: string;
    dob?: string;
    gender?: Gender;
    bloodType?: BloodType;
    maritalStatus?: MaritalStatus;
    occupation?: string;
    phone: string;
    alternatePhone?: string;
    email?: string;
    addressLine1?: string;
    addressLine2?: string;
    city?: string;
    state?: string;
    postalCode?: string;
    country?: string;
    aadhaarNumber?: string;
    panNumber?: string;
    passportNumber?: string;
    drivingLicense?: string;
    bloodGroup?: string;
    rhFactor?: string;
    allergies?: Record<string, any>;
    chronicConditions?: string[];
    currentMedications?: string[];
    knownAllergies?: string[];
    insuranceProvider?: string;
    insuranceId?: string;
    insuranceGroup?: string;
    insuranceValidUntil?: string;
    insuranceType?: InsuranceType;
    tpaId?: string;
    registrationType?: RegistrationType;
    referralSource?: string;
    referralDoctor?: string;
    referralHospital?: string;
    religion?: string;
    nationality?: string;
    language?: string;
    isVIP?: boolean;
    photoUrl?: string;
    photoName?: string;
    emergencyContacts?: EmergencyContactDto[];
    autoVerify?: boolean;
}
